
/** 
* This file has been auto-generated by '@kontent-ai/model-generator@8.0.0-14'.
* 
* (c) Kontent.ai
*  
* -------------------------------------------------------------------------------
* 
* Project: Ficto Healthtech [QA Source project]
* Environment: Production 
* Id: b0255462-358c-007b-0be0-43ee125ce1f0
* 
* -------------------------------------------------------------------------------
**/

import type { Elements } from "@kontent-ai/delivery-sdk";
import type { CoreContentType } from "../system/index.ts";

/**
 * Person
 *
 * Id: 3b8aea57-afdc-55b4-b7aa-30991e2515f8
 * Codename: person
 */
export type Person = CoreContentType<
  {
    /**
     * Photograph
     *
     * Type: asset
     * Required: false
     * Codename: photograph
     * Id: 514655d3-a35d-5c58-8807-b62108651728
     * Guidelines: Use a clear, professional, and high-quality headshot.
     */
    readonly photograph: Elements.AssetsElement;
    /**
     * First name
     *
     * Type: text
     * Required: true
     * Codename: first_name
     * Id: 412e6d34-62aa-524a-b97f-a23b2cf3e252
     */
    readonly first_name: Elements.TextElement;
    /**
     * Last name
     *
     * Type: text
     * Required: true
     * Codename: last_name
     * Id: 3b153753-6cd6-58e8-99ae-e60020ffd890
     */
    readonly last_name: Elements.TextElement;
    /**
     * Occupation
     *
     * Type: text
     * Required: false
     * Codename: occupation
     * Id: d73579bd-b03a-59e0-8464-63939e0cb6c7
     * Guidelines: Include relevant details about their job title, position, or area of expertise.
     */
    readonly occupation: Elements.TextElement;
    /**
     * Bio
     *
     * Type: rich_text
     * Required: false
     * Codename: bio
     * Id: 4341b423-f053-523f-bd0f-b63b6c786532
     * Guidelines: Write a biography that highlights the person's background and achievements. Don't forget to include relevant professional and educational information.
     */
    readonly bio: Elements.RichTextElement<CoreContentType>;
  },
  "person"
>;

/**
 * Type representing all available element codenames for Person
 */
export type PersonElementCodenames =
  | "photograph"
  | "first_name"
  | "last_name"
  | "occupation"
  | "bio";

/**
 * Type guard for Person
 *
 * Id: 3b8aea57-afdc-55b4-b7aa-30991e2515f8
 * Codename: person
 */
export function isPerson(
  item: CoreContentType | undefined | null,
): item is Person {
  return item?.system?.type === "person";
}
